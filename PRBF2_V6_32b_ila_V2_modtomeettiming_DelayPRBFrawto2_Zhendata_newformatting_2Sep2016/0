65c65
<   en_rx: in std_logic;
---
>   reset: in std_logic;
69c69
<   CIC_L_rx: out CIC_ar
---
>   CIC_L_rx: out CIC_ar;
82c82,83
< signal en_rx, en_tx: std_logic :='0';
---
> signal en_tx: std_logic;
> signal reset, reset_vio: std_logic;                --from user via vio
84c85
< signal data_gen_TX_s, data_gen_RX_s, data_gen_RX_s_d: data_gen_TX_s_ar :=(others=>(others=>'0'));
---
> signal data_gen_TX_s, data_gen_RX_s, data_gen_RX_s_d: data_gen_TX_s_ar;
87d87
< signal module_rx: module_ar;
96a97,98
> -- reset: in std_logic; --no need to have reset here since en which controls
> -- everything depends on the reset 
109a112
>   reset: in std_logic;
139a143,144
> -- reset: in std_logic; --no need to have reset here since wr_en0, rd_en0 which controls
> -- everything depends on the reset 
211,232c216,254
<     probe6 : IN STD_LOGIC_VECTOR(31 DOWNTO 0) 
< --    probe7 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe8 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe9 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe10 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe11 : IN STD_LOGIC_VECTOR(39 DOWNTO 0); 
< --    probe12 : IN STD_LOGIC_VECTOR(39 DOWNTO 0); 
< --    probe13 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe14 : IN STD_LOGIC_VECTOR(1 DOWNTO 0); 
< --    probe15 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
< --    probe16 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
< --    probe17 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
< --    probe18 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
< --    probe19 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe20 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe21 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe22 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
< --    probe23 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
< --    probe24 : IN STD_LOGIC_VECTOR(23 DOWNTO 0); 
< --    probe25 : IN STD_LOGIC_VECTOR(3 DOWNTO 0); 
< --    probe26 : IN STD_LOGIC_VECTOR(9 DOWNTO 0);
< --    probe27 : IN STD_LOGIC_VECTOR(5 DOWNTO 0)
---
>     probe6 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe7 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe8 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe9 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe10 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe11 : IN STD_LOGIC_VECTOR(39 DOWNTO 0); 
>     probe12 : IN STD_LOGIC_VECTOR(39 DOWNTO 0); 
>     probe13 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe14 : IN STD_LOGIC_VECTOR(1 DOWNTO 0); 
>     probe15 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
>     probe16 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
>     probe17 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
>     probe18 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
>     probe19 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe20 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe21 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe22 : IN STD_LOGIC_VECTOR(31 DOWNTO 0); 
>     probe23 : IN STD_LOGIC_VECTOR(7 DOWNTO 0); 
>     probe24 : IN STD_LOGIC_VECTOR(23 DOWNTO 0); 
>     probe25 : IN STD_LOGIC_VECTOR(3 DOWNTO 0); 
>     probe26 : IN STD_LOGIC_VECTOR(9 DOWNTO 0);
>     probe27 : IN STD_LOGIC_VECTOR(5 DOWNTO 0);
>     probe28 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
> 
>     probe29 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe30 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe31 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe32 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe33 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe34 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe35 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe36 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe37 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe38 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe39 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
>     probe40 : IN STD_LOGIC_VECTOR(31 DOWNTO 0)
> 
>     
>     
239c261,267
< 
---
> COMPONENT vio_0
>   PORT (
>     clk : IN STD_LOGIC;
>     probe_in0 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
>     probe_out0 : OUT STD_LOGIC_VECTOR(0 DOWNTO 0)
>   );
> END COMPONENT;
252a281,282
> -- reset: in std_logic; --no need to have reset here since en_rx0,1 which controls
> -- everything depends on the reset   
443c473
< I0: IBUFGDS 
---
>       I0: IBUFGDS 
445,448c475,478
<   port map(
<     O=> clk_i,
<     I=> clk_p,
<     IB=> clk_n);
---
>       port map(
>       O=> clk_i,
>       I=> clk_p,
>      IB=> clk_n);
451,457c481,487
<   port map
<   (-- Clock in ports
<     clk_in1  =>clk_i,
<     -- Clock out ports
<     clk_out1  =>clk,
<     locked=>pll_lock
<     );
---
>      port map
>       (-- Clock in ports
>        clk_in1  =>clk_i,
>        -- Clock out ports
>        clk_out1  =>clk,
>        locked=>pll_lock
>       );
461,464c491,494
< I_clk_rx: BUFGCE_1
<   port map(O =>clk_rx,
<            CE =>pll_lock,
<            I=>clk);
---
>       I_clk_rx: BUFGCE_1
>             port map(O =>clk_rx,
>             CE =>pll_lock,
>             I=>clk);
467a498
> --process(clk_tx) --MT
470,476c501,509
<   if clk_rx'event and clk_rx='1' then  
<     if count_tx=59 then
<       en_tx<='1';
<       count_tx<=x"00";
<     else
<       en_tx<='0';
<       count_tx<=count_tx+1;
---
> --    if clk_tx'event and clk_tx='1' then --MT
>     if clk_rx'event and clk_rx='1' then  
>         if count_tx=59 then
>             en_tx<='1';
>             count_tx<=x"00";
>         else
>             en_tx<='0';
>             count_tx<=count_tx+1;
>         end if;
478d510
<   end if;
482c514
< process(clk_rx)
---
> process(clk_rx,reset)
484,511c516,547
<   if clk_rx'event and clk_rx='1' then
<     if count_2rx=59 then
<       en_rx<='1';
<       en_2rx0<='0';
<       en_2rx1<='1';
<       count_2rx<=count_2rx+1;
<     elsif count_2rx=119 then
<       en_rx<='1';
<       en_2rx0<='1';
<       en_2rx1<='0';
<       count_2rx<=count_2rx+1;
<     elsif count_2rx=179 then
<       en_rx<='1';
<       en_2rx0<='0';
<       en_2rx1<='1';
<       count_2rx<=count_2rx+1;
<     elsif count_2rx=239 then
<       en_rx<='1';
<       en_2rx0<='1';
<       en_2rx1<='0';
<       count_2rx<=x"00";
<     else
<       en_rx<='0';
<       en_2rx0<='0';
<       en_2rx1<='0';
<       count_2rx<=count_2rx+1;
<     end if;
<   end if;
---
>   if reset = '1' then
>     count_2rx<=(others=>'0');
>     en_2rx0<='0';
>     en_2rx1<='0';
>   elsif clk_rx'event and clk_rx='1' then
>         if count_2rx=59 then
> --            en_rx<='1';
>             en_2rx0<='0';
>             en_2rx1<='1';
>             count_2rx<=count_2rx+1;
>         elsif count_2rx=119 then
> --            en_rx<='1';
>             en_2rx0<='1';
>             en_2rx1<='0';
>             count_2rx<=count_2rx+1;
>         elsif count_2rx=179 then
> --            en_rx<='1';
>             en_2rx0<='0';
>             en_2rx1<='1';
>             count_2rx<=count_2rx+1;
>         elsif count_2rx=239 then
> --            en_rx<='1';
>             en_2rx0<='1';
>             en_2rx1<='0';
>             count_2rx<=x"00";
>         else
> --            en_rx<='0';
>             en_2rx0<='0';
>             en_2rx1<='0';
>             count_2rx<=count_2rx+1;
>         end if;
>      end if;
515,532c551,568
<   clk_tx=> clk_rx,
<   en_tx=> en_tx,
<   data_gen_s=>data_gen_TX_s,
<   tx_valid=>tx_valid,
<   module_gen_o=>module_gen_o,
<   CIC_R_gen_o=> CIC_R_gen_o,
<   CIC_L_gen_o=>CIC_L_gen_o);
<     
<     
< process(clk_rx)
< begin
<   if clk_rx'event and clk_rx='1' then
<     data_gen_RX_s_d<=data_gen_TX_s;
<     
<     rx_valid_d<=tx_valid;
<   end if;
< end process;
< 
---
>     clk_tx=> clk_rx,
>     en_tx=> en_tx,
>     data_gen_s=>data_gen_TX_s,
>     tx_valid=>tx_valid,
>     module_gen_o=>module_gen_o,
>     CIC_R_gen_o=> CIC_R_gen_o,
>     CIC_L_gen_o=>CIC_L_gen_o);
>     
>     
>      process(clk_rx)
>      begin
>      if clk_rx'event and clk_rx='1' then
>      data_gen_RX_s_d<=data_gen_TX_s;
>     
>      rx_valid_d<=tx_valid;
>      end if;
>      end process;
>  
534,539c570,575
<   clk_rx=> clk_rx,
<   en_rx=> en_rx,
<   data_in_s=> data_gen_RX_s_d,
<   rx_valid=>rx_valid_d,
<   CIC_R_rx=> CIC_R_rx,
<   CIC_L_rx=> CIC_L_rx
---
>        clk_rx=> clk_rx,
>        reset=> reset,
>        data_in_s=> data_gen_RX_s_d,
>        rx_valid=>rx_valid_d,
>        CIC_R_rx=> CIC_R_rx,
>        CIC_L_rx=> CIC_L_rx
541,553c577,578
<   );
< 
< 
< 
< 
< I_lx_init_0: lx_en_gen
<   Port map( 
<     clk=> clk_rx,
<     en=> en_2rx0,
<     en_lx=> en_lx0,
<     wr_en=> wr_en0,
<     rd_en=> rd_en0
<     );
---
> --  data_p_i_outLS32b=>data_p_i_outLS32b       
>        );
554a580,591
>      
>        
>           
>     I_lx_init_0: lx_en_gen
>             Port map( 
>            clk=> clk_rx,
>            en=> en_2rx0,
>            en_lx=> en_lx0,
>            wr_en=> wr_en0,
>            rd_en=> rd_en0
>             );
>             
565,604c602,642
< I_serialize_for_PRBF1_0: serialize_for_PRBF1 
<   Port map( 
<     clk=> clk_rx,
<     CIC_R_rx=> CIC_R_rx,
<     CIC_L_rx=>CIC_L_rx,
<     en_lx=> en_lx0,
<     serial_layer_to_PRBF1_1=> serial_layer_to_PRBF1_1_0,
<     serial_layer_to_PRBF1_2=> serial_layer_to_PRBF1_2_0,
<     --debug
<     z4b_i_out_1=>z4b_i_out_1,
<     type1b_out_1=>type1b_out_1,
<     count_i_out1=>count_i_out1,
<     modid_in_out1=>modid_in_out1,
<     serial_layer_i_out1=>serial_layer_i_out1,
<     en_out1=>en_out1,
<     z4b_i_out_2=>z4b_i_out_2,
<     type1b_out_2=>type1b_out_2,
<     count_i_out2=>count_i_out2,
<     modid_in_out2=>modid_in_out2,
<     serial_layer_i_out2=>serial_layer_i_out2,
<     en_out2=>en_out2
<     
<     );
< 
< 
< 
< I_from_PRBFraw_to_PRBF1_0: From_PRBFraw_to_PRBF1 
<   Port map( 
<     clk=>clk_rx,
<     wr_en=>wr_en0,
<     rd_en=>rd_en0,
<     serial_layer_to_PRBF1_1=>serial_layer_to_PRBF1_1_0,
<     serial_layer_to_PRBF1_2=>serial_layer_to_PRBF1_2_0,
<     PRBFraw_to_PRBF1_out_1=>PRBFraw_to_PRBF1_1_0,
<     PRBFraw_to_PRBF1_out_2=>PRBFraw_to_PRBF1_2_0,
<     
<     PRBF1_valid_out_1=>PRBF1_valid_out_1,
<     PRBF1_valid_out_2=>PRBF1_valid_out_2);
<                       
< process(clk_rx)
---
>     I_serialize_for_PRBF1_0: serialize_for_PRBF1 
>               Port map( 
>               clk=> clk_rx,
>               reset=>reset,
>               CIC_R_rx=> CIC_R_rx,
>               CIC_L_rx=>CIC_L_rx,
>               en_lx=> en_lx0,
>               serial_layer_to_PRBF1_1=> serial_layer_to_PRBF1_1_0,
>               serial_layer_to_PRBF1_2=> serial_layer_to_PRBF1_2_0,
>               --debug
>               z4b_i_out_1=>z4b_i_out_1,
>               type1b_out_1=>type1b_out_1,
>               count_i_out1=>count_i_out1,
>               modid_in_out1=>modid_in_out1,
>               serial_layer_i_out1=>serial_layer_i_out1,
>               en_out1=>en_out1,
>               z4b_i_out_2=>z4b_i_out_2,
>               type1b_out_2=>type1b_out_2,
>               count_i_out2=>count_i_out2,
>               modid_in_out2=>modid_in_out2,
>               serial_layer_i_out2=>serial_layer_i_out2,
>               en_out2=>en_out2
>               
>               );
>               
>        
>      
>               I_from_PRBFraw_to_PRBF1_0: From_PRBFraw_to_PRBF1 
>                 Port map( 
>                 clk=>clk_rx,
>                 wr_en=>wr_en0,
>                 rd_en=>rd_en0,
>                 serial_layer_to_PRBF1_1=>serial_layer_to_PRBF1_1_0,
>                 serial_layer_to_PRBF1_2=>serial_layer_to_PRBF1_2_0,
>                 PRBFraw_to_PRBF1_out_1=>PRBFraw_to_PRBF1_1_0,
>                 PRBFraw_to_PRBF1_out_2=>PRBFraw_to_PRBF1_2_0,
>                 
>                      PRBF1_valid_out_1=>PRBF1_valid_out_1,
>                       PRBF1_valid_out_2=>PRBF1_valid_out_2);
> --adding a reset here: extra caution
> process(clk_rx,reset)
606c644,649
< if clk_rx'event and clk_rx='1' then
---
> if reset = '1' then
> PRBFraw_to_PRBF1_1<=(others=>(others=>'0'));
> PRBFraw_to_PRBF1_2<=(others=>(others=>'0'));
> PRBF1_valid_i1<=(others=>'0');
> PRBF1_valid_i2<=(others=>'0');
> elsif clk_rx'event and clk_rx='1' then
614c657
< 
---
> --adding a reset here: extra caution
617c660,671
< if clk_rx'event and clk_rx='1' then
---
> if reset = '1' then
> PRBF1_int_1<=(others=>'0');
> PRBF1_int_2<=(others=>'0');
> PRBF1_valid_int_1<='0';
> PRBF1_valid_int_2<='0';
> 
> PRBF1_to_BP_i1<=(others=>(others=>'0'));
> PRBF1_to_BP_i2<=(others=>(others=>'0'));
> 
> PRBF1_valid_to_BP_i1<=(others=>'0');                          
> PRBF1_valid_to_BP_i2<=(others=>'0');
> elsif clk_rx'event and clk_rx='1' then
656a711,712
>                       
> 
683,684c739,740
< 
< process(clk_rx)
---
> --adding a reset here: extra caution
> process(clk_rx,reset)
686,701c742,781
< if clk_rx'event and clk_rx='1' then
< PRBF1_from_BP_in1(1)<=PRBF1_int_1_d; 
< PRBF1_from_BP_in1(2)<=PRBF1_int_1_d; 
< PRBF1_from_BP_in1(3)<=PRBF1_int_1_d; 
< PRBF1_from_BP_in1(4)<=PRBF1_int_1_d; 
< PRBF1_from_BP_in1(5)<=PRBF1_int_1_d; 
< PRBF1_from_BP_in1(6)<=PRBF1_int_1_d; 
< PRBF1_from_BP_in1(7)<=PRBF1_int_1_d; 
< 
< PRBF1_from_BP_in2(1)<=PRBF1_int_2_d; 
< PRBF1_from_BP_in2(2)<=PRBF1_int_2_d; 
< PRBF1_from_BP_in2(3)<=PRBF1_int_2_d; 
< PRBF1_from_BP_in2(4)<=PRBF1_int_2_d; 
< PRBF1_from_BP_in2(5)<=PRBF1_int_2_d; 
< PRBF1_from_BP_in2(6)<=PRBF1_int_2_d; 
< PRBF1_from_BP_in2(7)<=PRBF1_int_2_d; 
---
> if reset = '1' then
> PRBF1_from_BP_in1(1)<=(others=>'0');
> PRBF1_from_BP_in1(2)<=(others=>'0');
> PRBF1_from_BP_in1(3)<=(others=>'0');
> PRBF1_from_BP_in1(4)<=(others=>'0');
> PRBF1_from_BP_in1(5)<=(others=>'0');
> PRBF1_from_BP_in1(6)<=(others=>'0');
> PRBF1_from_BP_in1(7)<=(others=>'0');
>                        
> PRBF1_from_BP_in2(1)<=(others=>'0');
> PRBF1_from_BP_in2(2)<=(others=>'0');
> PRBF1_from_BP_in2(3)<=(others=>'0');
> PRBF1_from_BP_in2(4)<=(others=>'0');
> PRBF1_from_BP_in2(5)<=(others=>'0');
> PRBF1_from_BP_in2(6)<=(others=>'0');
> PRBF1_from_BP_in2(7)<=(others=>'0');
> 
> PRBF1_valid_from_BP_in1<=(others=>'0');
> PRBF1_valid_from_BP_in2<=(others=>'0');
>   
> elsif clk_rx'event and clk_rx='1' then
> PRBF1_from_BP_in1(1)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> PRBF1_from_BP_in1(2)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> PRBF1_from_BP_in1(3)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> PRBF1_from_BP_in1(4)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> PRBF1_from_BP_in1(5)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> PRBF1_from_BP_in1(6)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> PRBF1_from_BP_in1(7)<=PRBF1_int_1_d; --MT mocking latency over the BP PRBF1_int_1;
> 
> PRBF1_from_BP_in2(1)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> PRBF1_from_BP_in2(2)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> PRBF1_from_BP_in2(3)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> PRBF1_from_BP_in2(4)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> PRBF1_from_BP_in2(5)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> PRBF1_from_BP_in2(6)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> PRBF1_from_BP_in2(7)<=PRBF1_int_2_d; --MT mocking latency over the BP PRBF1_int_2;
> 
> --MT mocking latency over the BP
> --PRBF1_valid_from_BP_in1<=PRBF1_valid_int_1 & PRBF1_valid_int_1 & PRBF1_valid_int_1 & PRBF1_valid_int_1 & PRBF1_valid_int_1 & PRBF1_valid_int_1 & PRBF1_valid_int_1;
> --PRBF1_valid_from_BP_in2<=PRBF1_valid_int_2 & PRBF1_valid_int_2 & PRBF1_valid_int_2 & PRBF1_valid_int_2 & PRBF1_valid_int_2 & PRBF1_valid_int_2 & PRBF1_valid_int_2;
709,733c789,816
< I_fifo1: fifo_TX_RX
<   PORT map(
<     rd_clk =>clk_rx,
<     wr_clk =>clk_rx,
<     rst =>'0',
<     din =>PRBF1_int_1,
<     wr_en =>PRBF1_valid_int_1,
<     rd_en =>'1',
<     dout =>PRBF1_int_out_1,
<     full =>fifo_full_PRBF1_int_1,
<     empty =>fifo_empty_PRBF1_int_1,
<     valid =>PRBF1_valid_int_out_1);
< 
< I_fifo2: fifo_TX_RX
<   PORT map(
<     rd_clk =>clk_rx,
<     wr_clk =>clk_rx,
<     rst =>'0',
<     din =>PRBF1_int_2,
<     wr_en =>PRBF1_valid_int_2,
<     rd_en =>'1',
<     dout =>PRBF1_int_out_2,
<     full =>fifo_full_PRBF1_int_2,
<     empty =>fifo_empty_PRBF1_int_2,
<     valid =>PRBF1_valid_int_out_2);  
---
> 
>                                                                        
>                              
>                              I_fifo1: fifo_TX_RX
>                                 PORT map(
>                                   rd_clk =>clk_rx,
>                                   wr_clk =>clk_rx,
>                                   rst =>reset,
>                                   din =>PRBF1_int_1,
>                                   wr_en =>PRBF1_valid_int_1,
>                                   rd_en =>'1',
>                                   dout =>PRBF1_int_out_1,
>                                   full =>fifo_full_PRBF1_int_1,
>                                   empty =>fifo_empty_PRBF1_int_1,
>                                   valid =>PRBF1_valid_int_out_1);
>                                                          
>                              I_fifo2: fifo_TX_RX
>                                 PORT map(
>                                   rd_clk =>clk_rx,
>                                  wr_clk =>clk_rx,
>                                   rst =>reset,
>                                   din =>PRBF1_int_2,
>                                   wr_en =>PRBF1_valid_int_2,
>                                   rd_en =>'1',
>                                   dout =>PRBF1_int_out_2,
>                                   full =>fifo_full_PRBF1_int_2,
>                                   empty =>fifo_empty_PRBF1_int_2,
>                                   valid =>PRBF1_valid_int_out_2);  
759a843,891
>                              
>                 
>                        I_from_PRBF1_to_PRBF2_m1: From_PRBF1_to_PRBF2_v2
>                          Port map(
>                          clk=>clk_rx,
> 
>                            en_rx0=>en_2rx0,
>                          en_rx1=>en_2rx1,
>                          PRBF1_from_BP_1=>PRBF1_from_BP_in1,
>                          PRBF1_from_BP_2=>PRBF1_from_BP_in2,
>                            --PRBF1_int_1=>PRBF1_int_out_1, --MT delaying PRBraw->1>2 data as for PRBF1_from_BP_in1
>                            --PRBF1_int_2=>PRBF1_int_out_2,
>                            PRBF1_int_1=>PRBF1_int_out_1_d,
>                            PRBF1_int_2=>PRBF1_int_out_2_d,
>                            PRBF1_valid_from_BP_1=>PRBF1_valid_from_BP_in1,
>                            PRBF1_valid_from_BP_2=>PRBF1_valid_from_BP_in2,
>                            --PRBF1_valid_int_1=>PRBF1_valid_int_out_1, --MT delaying PRBraw->1>2 data as for PRBF1_from_BP_in1
>                            ----delaying 
>                            --PRBF1_valid_int_2=>PRBF1_valid_int_out_2,
>                            PRBF1_valid_int_1=>PRBF1_valid_int_out_1_d,
>                            PRBF1_valid_int_2=>PRBF1_valid_int_out_2_d,
>                          PRBF1_to_PRBF2_out=>PRBF1_to_PRBF2_v2,
>                          PRBF2_valid_out=>PRBF2_valid_out,
>                          debug_out=>debug_out,
>                          internal_counting_out1=>internal_counting_out1,
>                          internal_counting_out2=>internal_counting_out2,
>   --debug signals for wrting SM
>   sm_wr_out1=>sm_wr_out1, 
>   data_i_out1=>data_i_out1,
>   valid_i_out1=>valid_i_out1,
>   rd_en_ii_out1=>rd_en_ii_out1,
>   data_count_tot_out1=>data_count_tot_out1,
>   wr_en_count_out1=>wr_en_count_out1,
>   data_count_fifo_out1=>data_count_fifo_out1,                         
>   en_fifo_out1=>en_fifo_out1,  
>   wr_en_fifo_out1=>wr_en_fifo_out1,
>   wr_en_out1=>wr_en_out1,
>   rd_en_out1=>rd_en_out1,
>   sm_wr_out2=>sm_wr_out2,                          
>   data_i_out2=>data_i_out2,
>   valid_i_out2=>valid_i_out2,
>   rd_en_ii_out2=>rd_en_ii_out2,
>   data_count_tot_out2=>data_count_tot_out2,
>   en_fifo_out2=>en_fifo_out2,    
>   wr_en_fifo_out2=>wr_en_fifo_out2,
>   wr_en_count_out2=>wr_en_count_out2,
>   data_count_fifo_out2=>data_count_fifo_out2,
>   wr_en_out2=>wr_en_out2,
>   rd_en_out2=>rd_en_out2,
760a893,894
>   PRBF1_to_PRBF2_i_1_out=>PRBF1_to_PRBF2_i_1_out,
>   PRBF1_to_PRBF2_i_2_out=>PRBF1_to_PRBF2_i_2_out,
762,812c896,900
< I_from_PRBF1_to_PRBF2_m1: From_PRBF1_to_PRBF2_v2
<   Port map(
<     clk=>clk_rx,
< 
<     en_rx0=>en_2rx0,
<     en_rx1=>en_2rx1,
<     PRBF1_from_BP_1=>PRBF1_from_BP_in1,
<     PRBF1_from_BP_2=>PRBF1_from_BP_in2,
<     PRBF1_int_1=>PRBF1_int_out_1_d,
<     PRBF1_int_2=>PRBF1_int_out_2_d,
<     PRBF1_valid_from_BP_1=>PRBF1_valid_from_BP_in1,
<     PRBF1_valid_from_BP_2=>PRBF1_valid_from_BP_in2,
<     PRBF1_valid_int_1=>PRBF1_valid_int_out_1_d,
<     PRBF1_valid_int_2=>PRBF1_valid_int_out_2_d,
<     PRBF1_to_PRBF2_out=>PRBF1_to_PRBF2_v2,
<     PRBF2_valid_out=>PRBF2_valid_out,
<     debug_out=>debug_out,
<     internal_counting_out1=>internal_counting_out1,
<     internal_counting_out2=>internal_counting_out2,
<     --debug signals for wrting SM
<     sm_wr_out1=>sm_wr_out1, 
<     data_i_out1=>data_i_out1,
<     valid_i_out1=>valid_i_out1,
<     rd_en_ii_out1=>rd_en_ii_out1,
<     data_count_tot_out1=>data_count_tot_out1,
<     wr_en_count_out1=>wr_en_count_out1,
<     data_count_fifo_out1=>data_count_fifo_out1,                         
<     en_fifo_out1=>en_fifo_out1,  
<     wr_en_fifo_out1=>wr_en_fifo_out1,
<     wr_en_out1=>wr_en_out1,
<     rd_en_out1=>rd_en_out1,
<     sm_wr_out2=>sm_wr_out2,                          
<     data_i_out2=>data_i_out2,
<     valid_i_out2=>valid_i_out2,
<     rd_en_ii_out2=>rd_en_ii_out2,
<     data_count_tot_out2=>data_count_tot_out2,
<     en_fifo_out2=>en_fifo_out2,    
<     wr_en_fifo_out2=>wr_en_fifo_out2,
<     wr_en_count_out2=>wr_en_count_out2,
<     data_count_fifo_out2=>data_count_fifo_out2,
<     wr_en_out2=>wr_en_out2,
<     rd_en_out2=>rd_en_out2,
< 
<     PRBF1_to_PRBF2_i_1_out=>PRBF1_to_PRBF2_i_1_out,
<     PRBF1_to_PRBF2_i_2_out=>PRBF1_to_PRBF2_i_2_out,
< 
<     --SM controlling datacount
<     sm_rd2_out1=>sm_rd2_out1,
<     sm_rd2_out2=>sm_rd2_out2,
<     --
<     
---
>   --SM controlling datacount
>   sm_rd2_out1=>sm_rd2_out1,
>   sm_rd2_out2=>sm_rd2_out2,
>   --
>                          
814,832c902,920
<     sm_rd_out1=>sm_rd_out1,
<     rd_en_iii_out1=>rd_en_iii_out1,
<     valid_e_out1=>valid_e_out1,
<     valid_s_out1=>valid_s_out1,
<     rd_en_fifo_out1=>rd_en_fifo_out1,
<     almost_empty_fifo_out1=>almost_empty_fifo_out1,
<     empty_fifo_out1=>empty_fifo_out1,
<     valid_fifo_out1=>valid_fifo_out1,
<     sm_rd_out2=>sm_rd_out2,
<     rd_en_iii_out2=>rd_en_iii_out2,
<     valid_e_out2=>valid_e_out2,
<     valid_s_out2=>valid_s_out2,
<     rd_en_fifo_out2=>rd_en_fifo_out2,
<     almost_empty_fifo_out2=>almost_empty_fifo_out2,
<     empty_fifo_out2=>empty_fifo_out2,
<     valid_fifo_out2=>valid_fifo_out2
<     
<     
<     );
---
>   sm_rd_out1=>sm_rd_out1,
>   rd_en_iii_out1=>rd_en_iii_out1,
>   valid_e_out1=>valid_e_out1,
>   valid_s_out1=>valid_s_out1,
>   rd_en_fifo_out1=>rd_en_fifo_out1,
>   almost_empty_fifo_out1=>almost_empty_fifo_out1,
>   empty_fifo_out1=>empty_fifo_out1,
>   valid_fifo_out1=>valid_fifo_out1,
>   sm_rd_out2=>sm_rd_out2,
>   rd_en_iii_out2=>rd_en_iii_out2,
>   valid_e_out2=>valid_e_out2,
>   valid_s_out2=>valid_s_out2,
>   rd_en_fifo_out2=>rd_en_fifo_out2,
>   almost_empty_fifo_out2=>almost_empty_fifo_out2,
>   empty_fifo_out2=>empty_fifo_out2,
>   valid_fifo_out2=>valid_fifo_out2
>                          
>                          
>                           );
857c945,946
<     probe6 =>PRBF1_to_PRBF2_v2(6)
---
>     probe6 =>PRBF1_to_PRBF2_v2(6),
> 
859,931c948,1016
< --    --probe7 => data_gen_RX_s_d(1),
< --    --probe8 => data_gen_RX_s_d(2),
< --    --probe9 => data_gen_RX_s_d(3),
< 
< --    --probe10=>serial_layer_to_PRBF1_1_0(1),
< --    --probe11=>serial_layer_to_PRBF1_1_0(2),
< --    --probe12=>serial_layer_to_PRBF1_2_0(1),
< --    --probe13=>serial_layer_to_PRBF1_2_0(2),
< 
< --    probe7=>PRBF1_int_out_1_d,
< --    probe8=>PRBF1_int_out_2_d,        
< --    probe9=>PRBF1_from_BP_in1(1),
< --    probe10=>PRBF1_from_BP_in2(1),                
< 
< --    probe11=>en_out1,
< --    probe12=>en_out2,        
< 
< 
< 
< --    --probe20=>serial_layer_i_out1(1),
< --    --probe21=>serial_layer_i_out1(2),
< --    --probe22=>serial_layer_i_out1(3),
< --    --probe23=>serial_layer_i_out2(1),
< --    --probe24=>serial_layer_i_out2(2),
< --    --probe25=>serial_layer_i_out2(3),
< 
< --    probe13(1 downto 0)=>sm_wr_out2(1)(1),  --(1)(1) => layer 5 1st data (PRBF1_from_BP_1(1))
< --    probe13(3 downto 2)=>sm_wr_out2(1)(2),  --(1)(2) => layer 5 2nd data (PRBF1_from_BP_1(2))        
< --    probe13(5 downto 4)=>sm_wr_out2(1)(3),
< --    probe13(7 downto 6)=>sm_wr_out2(1)(4),
< --    probe13(9 downto 8)=>sm_wr_out2(1)(5),
< --    probe13(11 downto 10)=>sm_wr_out2(1)(6),
< --    probe13(13 downto 12)=>sm_wr_out2(1)(7),
< --    probe13(15 downto 14)=>sm_wr_out2(1)(8),
< --    probe13(17 downto 16)=>sm_wr_out2(1)(9),
< --    probe13(19 downto 18)=>sm_wr_out2(1)(10),
< --    probe13(21 downto 20)=>sm_wr_out2(1)(11),
< --    probe13(23 downto 22)=>sm_wr_out2(1)(12),
< --    probe13(25 downto 24)=>sm_wr_out2(1)(13),
< --    probe13(27 downto 26)=>sm_wr_out2(1)(14),
< --    probe13(29 downto 28)=>sm_wr_out2(1)(15),
< --    probe13(31 downto 30)=>sm_wr_out2(1)(16),        
< 
< --    probe14(1 downto 0)=>sm_wr_out2(2)(1),                        
< 
< --    probe15=>data_count_tot_out2(1),
< --    probe16=>data_count_tot_out2(2),
< 
< --probe17=>internal_counting_out2(1),
< --probe18=>internal_counting_out2(2),
< 
< --probe19(7 downto 0)=>wr_en_count_out2(1)(1),
< --probe19(15 downto 8)=>wr_en_count_out2(1)(2),
< --probe19(23 downto 16)=>wr_en_count_out2(1)(3),
< --probe19(31 downto 24)=>wr_en_count_out2(1)(4),                
< --probe20(7 downto 0)=>wr_en_count_out2(1)(5),
< --probe20(15 downto 8)=>wr_en_count_out2(1)(6),
< --probe20(23 downto 16)=>wr_en_count_out2(1)(7),
< --probe20(31 downto 24)=>wr_en_count_out2(1)(8),                
< --probe21(7 downto 0)=>wr_en_count_out2(1)(9),
< --probe21(15 downto 8)=>wr_en_count_out2(1)(10),
< --probe21(23 downto 16)=>wr_en_count_out2(1)(11),
< --probe21(31 downto 24)=>wr_en_count_out2(1)(12),                
< --probe22(7 downto 0)=>wr_en_count_out2(1)(13),
< --probe22(15 downto 8)=>wr_en_count_out2(1)(14),
< --probe22(23 downto 16)=>wr_en_count_out2(1)(15),
< --probe22(31 downto 24)=>wr_en_count_out2(1)(16),
< 
< --probe23(7 downto 0)=>wr_en_count_out2(2)(1),                        
< 
< --probe24(7 downto 0)=>data_count_fifo_out2(1)(1),
< --probe24(15 downto 8)=>data_count_fifo_out2(1)(2),
< --probe24(23 downto 16)=>data_count_fifo_out2(2)(1),
---
>     --probe10=>serial_layer_to_PRBF1_1_0(1),
>     --probe11=>serial_layer_to_PRBF1_1_0(2),
>     --probe12=>serial_layer_to_PRBF1_2_0(1),
>     --probe13=>serial_layer_to_PRBF1_2_0(2),
> 
>     probe7=>PRBF1_int_out_1_d,
>     probe8=>PRBF1_int_out_2_d,        
>     probe9=>PRBF1_from_BP_in1(1),
>     probe10=>PRBF1_from_BP_in2(1),                
> 
>     probe11=>en_out1,
>     probe12=>en_out2,        
> 
> 
> 
>     --probe20=>serial_layer_i_out1(1),
>     --probe21=>serial_layer_i_out1(2),
>     --probe22=>serial_layer_i_out1(3),
>     --probe23=>serial_layer_i_out2(1),
>     --probe24=>serial_layer_i_out2(2),
>     --probe25=>serial_layer_i_out2(3),
> 
>     probe13(1 downto 0)=>sm_wr_out2(1)(1),  --(1)(1) => layer 5 1st data (PRBF1_from_BP_1(1))
>     probe13(3 downto 2)=>sm_wr_out2(1)(2),  --(1)(2) => layer 5 2nd data (PRBF1_from_BP_1(2))        
>     probe13(5 downto 4)=>sm_wr_out2(1)(3),
>     probe13(7 downto 6)=>sm_wr_out2(1)(4),
>     probe13(9 downto 8)=>sm_wr_out2(1)(5),
>     probe13(11 downto 10)=>sm_wr_out2(1)(6),
>     probe13(13 downto 12)=>sm_wr_out2(1)(7),
>     probe13(15 downto 14)=>sm_wr_out2(1)(8),
>     probe13(17 downto 16)=>sm_wr_out2(1)(9),
>     probe13(19 downto 18)=>sm_wr_out2(1)(10),
>     probe13(21 downto 20)=>sm_wr_out2(1)(11),
>     probe13(23 downto 22)=>sm_wr_out2(1)(12),
>     probe13(25 downto 24)=>sm_wr_out2(1)(13),
>     probe13(27 downto 26)=>sm_wr_out2(1)(14),
>     probe13(29 downto 28)=>sm_wr_out2(1)(15),
>     probe13(31 downto 30)=>sm_wr_out2(1)(16),        
> 
>     probe14(1 downto 0)=>sm_wr_out2(2)(1),                        
> 
>     probe15=>data_count_tot_out2(1),
>     probe16=>data_count_tot_out2(2),
> 
> probe17=>internal_counting_out2(1),
> probe18=>internal_counting_out2(2),
> 
> probe19(7 downto 0)=>wr_en_count_out2(1)(1),
> probe19(15 downto 8)=>wr_en_count_out2(1)(2),
> probe19(23 downto 16)=>wr_en_count_out2(1)(3),
> probe19(31 downto 24)=>wr_en_count_out2(1)(4),                
> probe20(7 downto 0)=>wr_en_count_out2(1)(5),
> probe20(15 downto 8)=>wr_en_count_out2(1)(6),
> probe20(23 downto 16)=>wr_en_count_out2(1)(7),
> probe20(31 downto 24)=>wr_en_count_out2(1)(8),                
> probe21(7 downto 0)=>wr_en_count_out2(1)(9),
> probe21(15 downto 8)=>wr_en_count_out2(1)(10),
> probe21(23 downto 16)=>wr_en_count_out2(1)(11),
> probe21(31 downto 24)=>wr_en_count_out2(1)(12),                
> probe22(7 downto 0)=>wr_en_count_out2(1)(13),
> probe22(15 downto 8)=>wr_en_count_out2(1)(14),
> probe22(23 downto 16)=>wr_en_count_out2(1)(15),
> probe22(31 downto 24)=>wr_en_count_out2(1)(16),
> 
> probe23(7 downto 0)=>wr_en_count_out2(2)(1),                        
> 
> probe24(7 downto 0)=>data_count_fifo_out2(1)(1),
> probe24(15 downto 8)=>data_count_fifo_out2(1)(2),
> probe24(23 downto 16)=>data_count_fifo_out2(2)(1),
933,934c1018,1019
< --probe25(1 downto 0)=>sm_rd2_out2(1),
< --probe25(3 downto 2)=>sm_rd2_out2(2),                
---
> probe25(1 downto 0)=>sm_rd2_out2(1),
> probe25(3 downto 2)=>sm_rd2_out2(2),                
937,938c1022,1023
< --probe26(4 downto 0)=>sm_rd_out2(1),
< --probe26(9 downto 5)=>sm_rd_out2(2),                
---
> probe26(4 downto 0)=>sm_rd_out2(1),
> probe26(9 downto 5)=>sm_rd_out2(2),                
940,945c1025,1047
< --probe27(0)=>rd_en_iii_out2(1),
< --probe27(1)=>rd_en_ii_out2(1),
< --probe27(2)=>rd_en_iii_out2(1),                
< --probe27(3)=>rd_en_iii_out2(2),
< --probe27(4)=>rd_en_ii_out2(2),
< --probe27(5)=>rd_en_iii_out2(2)                
---
> probe27(0)=>rd_en_iii_out2(1),
> probe27(1)=>rd_en_ii_out2(1),
> probe27(2)=>rd_en_iii_out2(1),                
> probe27(3)=>rd_en_iii_out2(2),
> probe27(4)=>rd_en_ii_out2(2),
> probe27(5)=>rd_en_iii_out2(2),
> 
> probe28(0)=>reset_vio,
> 
>     probe29 => data_gen_RX_s_d(1),
>     probe30 => data_gen_RX_s_d(2),
>     probe31 => data_gen_RX_s_d(3),
>     probe32 => data_gen_RX_s_d(4),
>     probe33 => data_gen_RX_s_d(5),
>     probe34 => data_gen_RX_s_d(6),
>     probe35 => data_gen_RX_s_d(7),
>     probe36 => data_gen_RX_s_d(8),
>     probe37 => data_gen_RX_s_d(9),
>     probe38 => data_gen_RX_s_d(10),
>     probe39 => PRBFraw_to_PRBF1_1_0(1),
>     probe40 => PRBFraw_to_PRBF1_2_0(1)
>         
>         
950c1052,1057
<     
---
> vio : vio_0
>   PORT MAP (
>     clk => clk_rx,
>     probe_in0(0) => reset,
>     probe_out0(0) => reset_vio
>   );    
952c1059
<     
---
> reset<=reset_vio;                       --keep it asynch?
